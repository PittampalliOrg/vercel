receivers:
  otlp:
    protocols:
      grpc:
        endpoint: otel-collector:4317
      http:
        endpoint: otel-collector:4318
        include_metadata: true
        cors:
          allowed_origins:
            - http://localhost
            - https://*
          allowed_headers:
            - "Content-Type"
            - "X-Api-Key"
            - "X-Faro-Session-Id"
          max_age: 7200
  httpcheck/traefik:
    targets:
      - endpoint: http://traefik:8080
  docker_stats:
    endpoint: unix:///var/run/docker.sock
  filelog:
    include_file_path: true
    include:
      - ./psql_logs/*.log
    operators:
      - id: container-parser
        type: container
      - type: trace_parser
        trace_id:
          parse_from: attributes.traceId
        span_id:
          parse_from: attributes.spanId
        trace_flags:
          parse_from: attributes.traceFlags

  # Host metrics
  prometheus/traces-collector:
    config:
      scrape_configs:
        - job_name: otelcol-contrib/traces-collector
          scrape_interval: 10s
          static_configs:
            - targets: [0.0.0.0:8888]
  hostmetrics/traces-collector:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.logical.count:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.memory.limit:
            enabled: true
      load:
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
      paging:
      processes:
      process:
        mute_process_user_error: true
        metrics:
          process.cpu.utilization:
            enabled: true
          process.memory.utilization:
            enabled: true
          process.threads:
            enabled: true
          process.paging.faults:
            enabled: true

exporters:
  debug:
    verbosity: detailed
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
      insecure: true
  otlphttp/traces-collector/mimir:
    endpoint: http://mimir:9009/otlp
  otlphttp/loki:
    endpoint: http://loki:3100/otlp 
  otlphttp/mimir:
    endpoint: http://mimir:9009/otlp
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true
  otlp/pyroscope:
    endpoint: "http://pyroscope:4040"
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    resource_to_telemetry_conversion:
      enabled: true
    timeout: 60s
    tls:
      insecure_skip_verify: true
  file/no_rotation:
    path: ./logs/logs.json
  clickhouse:
    endpoint: tcp://clickhouse:9000
    # ttl: 72h
    traces_table_name: otel_traces
    logs_table_name: otel_logs
    create_schema: true
    timeout: 5s
    database: default
    sending_queue:
      queue_size: 1000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    username: "username"
    password: "password"

processors:
  batch:
  batch/traces-collector:
  attributes/traces-collector:
    actions:
      - key: service.namespace
        action: upsert
        value: traces-collector
      - key: service.name
        action: upsert
        value: otelcol-contrib/traces-collector
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  transform:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["host.name"], resource.attributes["host.name"])
          - set(attributes["process.command"], resource.attributes["process.command"])
          - set(attributes["process.command_line"], resource.attributes["process.command_line"])
          - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
          - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
          - set(attributes["process.owner"], resource.attributes["process.owner"])
          - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
          - set(attributes["process.pid"], resource.attributes["process.pid"])

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [transform, batch]
      exporters: [otlp/tempo]
    metrics/traces-collector:
      receivers: [otlp, hostmetrics/traces-collector]
      processors: [attributes/traces-collector, resourcedetection/system, transform, batch/traces-collector]
      exporters: [otlphttp/traces-collector/mimir]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/loki, debug]
    profiles:
      receivers: [otlp]
      exporters: [otlp/pyroscope]
  telemetry:
    metrics:
      level: detailed
    logs:
      level: info


