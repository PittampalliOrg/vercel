receivers:
  otlp:
    protocols:
      grpc:
        endpoint: otel-collector:4317
      http:
        endpoint: otel-collector:4318
        cors:
          allowed_origins:
            - http://*
            - https://*
  httpcheck/traefik:
    targets:
      - endpoint: http://traefik:8080
  docker_stats:
    endpoint: unix:///var/run/docker.sock
  filelog:
    include_file_path: true
    include:
      - ./psql_logs/*.log
    operators:
      - id: container-parser
        type: container
      - type: trace_parser
        trace_id:
          parse_from: attributes.traceId
        span_id:
          parse_from: attributes.spanId
        trace_flags:
          parse_from: attributes.traceFlags

  # Host metrics
  hostmetrics:
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      load:
      filesystem:
        exclude_mount_points:
          mount_points:
            - /dev/*
            - /proc/*
            - /sys/*
            - /run/k3s/containerd/*
            - /var/lib/docker/*
            - /var/lib/kubelet/*
            - /snap/*
          match_type: regexp
        exclude_fs_types:
          fs_types:
            - autofs
            - binfmt_misc
            - bpf
            - cgroup2
            - configfs
            - debugfs
            - devpts
            - devtmpfs
            - fusectl
            - hugetlbfs
            - iso9660
            - mqueue
            - nsfs
            - overlay
            - proc
            - procfs
            - pstore
            - rpc_pipefs
            - securityfs
            - selinuxfs
            - squashfs
            - sysfs
            - tracefs
          match_type: strict
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      network:
      paging:
      processes:
      process:
        mute_process_exe_error: true
        mute_process_io_error: true
        mute_process_user_error: true
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

exporters:
  debug:
    verbosity: detailed
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
      insecure: true
  otlphttp/mimir:
    endpoint: "http://mimir:9009"
    tls:
      insecure: true
  otlphttp/loki:
    endpoint: "http://loki:3100"
    tls:
      insecure: true
  otlphttp/tempo:
    endpoint: "http://tempo:4317"
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    resource_to_telemetry_conversion:
      enabled: true
    timeout: 60s
    tls:
      insecure_skip_verify: true
  otlphttp/traceloop:
    endpoint: "https://api.traceloop.com" 
    headers:
      "Authorization": "Bearer ${env:TRACELOOP_API_KEY}"
  otlphttp/betterstack:
    endpoint: "https://s1202625.eu-nbg-2.betterstackdata.com"
    headers:
      Authorization: "Bearer zYyRMpCtN1ipLRpJQQKDeW16"
  file/no_rotation:
    path: ./logs/logs.json
  clickhouse:
    endpoint: tcp://clickhouse:9000
    # ttl: 72h
    traces_table_name: otel_traces
    logs_table_name: otel_logs
    create_schema: true
    timeout: 5s
    database: default
    sending_queue:
      queue_size: 1000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    username: "username"
    password: "password"

processors:
  batch:
  memory_limiter:
    check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage: 25
  transform:
    error_mode: ignore
    trace_statements:
      - context: span
        statements:
        
connectors:
  spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, transform, batch]
      exporters: [otlphttp/tempo, spanmetrics]
    metrics:
      receivers: [hostmetrics, docker_stats, httpcheck/traefik, otlp, spanmetrics]
      processors: [memory_limiter, batch]
      exporters: [otlphttp/mimir, debug]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlphttp/loki, debug]
  telemetry:
    metrics:
      level: detailed
      readers:
        - periodic:
            interval: 10000
            timeout: 5000
            exporter:
              otlp:
                protocol: grpc
                endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_GRPC}