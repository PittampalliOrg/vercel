/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDocumentFromDiscriminatorValue, serializeDocument, serializeDocument_NoPK, type Document, type Document_NoPK } from '../../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithCreatedAtGetResponse}
 */
// @ts-ignore
export function createWithCreatedAtGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithCreatedAtGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithCreatedAtPatchResponse}
 */
// @ts-ignore
export function createWithCreatedAtPatchResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithCreatedAtPatchResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithCreatedAtPutResponse}
 */
// @ts-ignore
export function createWithCreatedAtPutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithCreatedAtPutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithCreatedAtGetResponse(withCreatedAtGetResponse: Partial<WithCreatedAtGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { withCreatedAtGetResponse.value = n.getCollectionOfObjectValues<Document>(createDocumentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithCreatedAtPatchResponse(withCreatedAtPatchResponse: Partial<WithCreatedAtPatchResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { withCreatedAtPatchResponse.value = n.getCollectionOfObjectValues<Document>(createDocumentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithCreatedAtPutResponse(withCreatedAtPutResponse: Partial<WithCreatedAtPutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { withCreatedAtPutResponse.value = n.getCollectionOfObjectValues<Document>(createDocumentFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithCreatedAtGetResponse(writer: SerializationWriter, withCreatedAtGetResponse: Partial<WithCreatedAtGetResponse> | undefined | null = {}) : void {
    if (withCreatedAtGetResponse) {
        writer.writeCollectionOfObjectValues<Document>("value", withCreatedAtGetResponse.value, serializeDocument);
        writer.writeAdditionalData(withCreatedAtGetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithCreatedAtPatchResponse(writer: SerializationWriter, withCreatedAtPatchResponse: Partial<WithCreatedAtPatchResponse> | undefined | null = {}) : void {
    if (withCreatedAtPatchResponse) {
        writer.writeCollectionOfObjectValues<Document>("value", withCreatedAtPatchResponse.value, serializeDocument);
        writer.writeAdditionalData(withCreatedAtPatchResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithCreatedAtPutResponse(writer: SerializationWriter, withCreatedAtPutResponse: Partial<WithCreatedAtPutResponse> | undefined | null = {}) : void {
    if (withCreatedAtPutResponse) {
        writer.writeCollectionOfObjectValues<Document>("value", withCreatedAtPutResponse.value, serializeDocument);
        writer.writeAdditionalData(withCreatedAtPutResponse.additionalData);
    }
}
export interface WithCreatedAtGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: Document[] | null;
}
/**
 * Builds and executes requests for operations under /Document/id/{id}/createdAt/{createdAt}
 */
export interface WithCreatedAtItemRequestBuilder extends BaseRequestBuilder<WithCreatedAtItemRequestBuilder> {
    /**
     * Delete entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Returns an entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithCreatedAtGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<WithCreatedAtItemRequestBuilderGetQueryParameters> | undefined) : Promise<WithCreatedAtGetResponse | undefined>;
    /**
     * Update or create entity.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithCreatedAtPatchResponse>}
     */
     patch(body: Document_NoPK, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithCreatedAtPatchResponse | undefined>;
    /**
     * Replace or create entity.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithCreatedAtPutResponse>}
     */
     put(body: Document_NoPK, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithCreatedAtPutResponse | undefined>;
    /**
     * Delete entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Returns an entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WithCreatedAtItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update or create entity.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Document_NoPK, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Replace or create entity.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: Document_NoPK, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Returns an entity.
 */
export interface WithCreatedAtItemRequestBuilderGetQueryParameters {
    /**
     * An opaque string that specifies the cursor position after which results should be returned.
     */
    after?: string;
    /**
     * An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.
     */
    filter?: string;
    /**
     * An integer value that specifies the number of items to return. Default is 100.
     */
    first?: number;
    /**
     * Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.
     */
    orderby?: string;
    /**
     * A comma separated list of fields to return in the response.
     */
    select?: string;
}
export interface WithCreatedAtPatchResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: Document[] | null;
}
export interface WithCreatedAtPutResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: Document[] | null;
}
/**
 * Uri template for the request builder.
 */
export const WithCreatedAtItemRequestBuilderUriTemplate = "{+baseurl}/Document/id/{id}/createdAt/{createdAt}{?%24after*,%24filter*,%24first*,%24orderby*,%24select*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WithCreatedAtItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "after": "%24after",
    "filter": "%24filter",
    "first": "%24first",
    "orderby": "%24orderby",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithCreatedAtItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithCreatedAtItemRequestBuilderUriTemplate,
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithCreatedAtItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithCreatedAtGetResponseFromDiscriminatorValue,
        queryParametersMapper: WithCreatedAtItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: WithCreatedAtItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithCreatedAtPatchResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDocument_NoPK,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    put: {
        uriTemplate: WithCreatedAtItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithCreatedAtPutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDocument_NoPK,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
