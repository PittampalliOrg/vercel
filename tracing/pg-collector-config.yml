receivers:
    postgresql:
        collection_interval: 1m0s
        databases:
            - postgres
        endpoint: localhost:5432
        password: postgres
        tls:
            insecure: true
        transport: tcp
        username: postgres
    sqlquery:
      driver: postgres
      datasource: "host=db port=5432 user=postgres password=postgres sslmode=disable"
      storage: file_storage
      queries:
        - sql: "select * from chat where id > $$1"
          tracking_start_value: "10000"
          tracking_column: log_id
          logs:
            - body_column: log_body
              attribute_columns: [ "log_attribute_1", "log_attribute_2" ]
        - sql: "select count(*) as count, genre from movie group by genre"
          metrics:
            - metric_name: movie.genres
              value_column: "count"
              attribute_columns: ["genre"]
              static_attributes:
                dbinstance: mydbinstance
exporters:
  otlp:
    endpoint: "otel-collector:4317"
    tls:
        insecure: true
  debug:
    verbosity: detailed
  otlp/metrics:
    endpoint: "data-prepper:21891"
    tls:
      insecure: true
      insecure_skip_verify: true
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    resource_to_telemetry_conversion:
      enabled: true
    timeout: 60s
    tls:
      insecure_skip_verify: true
processors:
    resourcedetection:
        detectors:
            - system
        system:
            hostname_sources:
                - os

service:
    pipelines:
        metrics:
            receivers: [postgresql]
            processors: [resourcedetection]
            exporters: [prometheusremotewrite, debug]
    telemetry:
        metrics:
            address: localhost:8888