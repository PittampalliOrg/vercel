version: "3.8"

x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"

networks:
  shared-network:
    name: shared-network

volumes:
  postgres-data:
  prometheus_data: 

services:

  ########################################
  # 1) Proxy/Traefik
  ########################################
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entryPoints.web.address=:80"
      - "--tracing.otlp.http=true"
      - "--tracing.otlp.http.endpoint=http://otel-collector:4318/v1/traces"
      - "--experimental.otlpLogs=true"
      - "--log.otlp.http.endpoint=http://otel-collector:4318/v1/logs"
      - "--accesslog.fields.names.StartUTC=drop"
      - "--metrics.otlp.http.endpoint=http://otel-collector:4318/v1/metrics"
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - TZ=America/New_York
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - shared-network

  app:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=(Host(`localhost`) && PathPrefix(`/app`))"
    networks:
      - shared-network

  frontend:
    container_name: frontend
    image: next-js
    volumes:
      - .:/workspace:cached
      - ./.next:/app/.next
      - ./public:/app/public
    environment:
      - NEXT_PUBLIC_BASE_PATH=/frontend
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    command: sleep infinity
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=(Host(`localhost`) && PathPrefix(`/frontend`))"
    depends_on:
      - traefik
    networks:
      - shared-network

  playground:
    container_name: playground
    image: next-js
    volumes:
      - ../next-app-router-playground:/workspace:cached
    environment:
      - NEXT_PUBLIC_BASE_PATH=/playground
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    command: sleep infinity
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.playground.rule=(Host(`localhost`) && PathPrefix(`/playground`))"
    depends_on:
      - traefik
    networks:
      - shared-network

  db:
    container_name: db
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/lib/db/migrations:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - shared-network

  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo
    networks:
      - shared-network

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    container_name: tempo
    volumes:
      - ./config/shared/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/var/tempo
    # We only map 3200. We do NOT map 4317:4317 to the host to avoid conflict.
    ports:
      - "3200:3200"
    depends_on:
      - init
    networks:
      - shared-network

  otel-collector:
    image: ${COLLECTOR_CONTRIB_IMAGE}
    container_name: otel-collector
    deploy:
      resources:
        limits:
          memory: 200M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    user: 0:0
    volumes:
      - ${HOST_FILESYSTEM}:/hostfs:ro
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./config/otel-collector/otel-collector-config.yml:/etc/otelcol-config.yml
      - ./config/otel-collector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
      - ./logs:/logs
    # Publish 4317:4317 for gRPC, 4318 for HTTP, etc
    ports:
      - "${OTEL_COLLECTOR_PORT_GRPC}:${OTEL_COLLECTOR_PORT_GRPC}"
      - "${OTEL_COLLECTOR_PORT_HTTP}:${OTEL_COLLECTOR_PORT_HTTP}"
      - "13133:13133"
      - "9464"
      - "8889"
    logging: *logging
    environment:
      - ENVOY_PORT
      - HOST_FILESYSTEM=""
      - OTEL_COLLECTOR_HOST
      - OTEL_COLLECTOR_PORT_GRPC
      - OTEL_COLLECTOR_PORT_HTTP
      - TRACELOOP_API_KEY
      - AZURE_STORAGE_EXPLORER_KEY
    networks:
      - shared-network

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./config/shared/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - shared-network

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=(Host(`localhost`) && PathPrefix(`/grafana`))"
    expose:
      - "3000"
    networks:
      - shared-network
    depends_on:
      - mimir
      - loki
      - tempo
  mimir:
    image: grafana/mimir:2.11.0
    volumes:
      - ./config/mimir/mimir.yaml:/etc/mimir.yaml
    command: --config.file=/etc/mimir.yaml -distributor.otel-metric-suffixes-enabled
    networks:
      - shared-network
  loki:
    image: grafana/loki:3.0.0
    command: -config.file=/etc/loki/local-config.yaml -log.level=debug
    volumes:
      - ./config/loki/:/etc/loki/:ro
    networks:
      - shared-network
